{
  "name": "loud-rejection",
  "version": "1.0.0",
  "description": "Make unhandled promise rejections fail loudly instead of the default silent fail",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/sindresorhus/loud-rejection"
  },
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "node test.js || exit 0"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "promise",
    "unhandled",
    "rejection",
    "loud",
    "fail",
    "catch",
    "throw",
    "handler",
    "exit"
  ],
  "devDependencies": {
    "ava": "*",
    "xo": "*"
  },
  "readme": "# loud-rejection [![Build Status](https://travis-ci.org/sindresorhus/loud-rejection.svg?branch=master)](https://travis-ci.org/sindresorhus/loud-rejection)\n\n> Make unhandled promise rejections fail loudly instead of the default [silent fail](https://gist.github.com/benjamingr/0237932cee84712951a2)\n\nBy default, promises fail silently if you don't attach a `.catch()` handler to them.\n\nThis is useful for CLI tools so you don't have to manually `.catch()` all the promises.\n\n**Should NOT be used in reusable modules. Only in top-level apps / CLI tools.**\n\n\n## Install\n\n```\n$ npm install --save loud-rejection\n```\n\n\n## Usage\n\n```js\nconst loudRejection = require('loud-rejection');\nconst promiseFn = require('promise-fn');\n\nloudRejection();\n\npromiseFn();\n```\n\nWithout this module it's more verbose and you might even miss some that will fail silently:\n\n```js\nconst promiseFn = require('promise-fn');\n\nfunction error(err) {\n\tconsole.error(err.stack);\n\tprocess.exit(1);\n}\n\npromiseFn().catch(error);\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/sindresorhus/loud-rejection/issues"
  },
  "_id": "loud-rejection@1.0.0",
  "_from": "loud-rejection@^1.0.0"
}
